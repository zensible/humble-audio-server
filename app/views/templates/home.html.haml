#top{"ng-controller" => "HomeCtrl"}
  #media-selector{ "ng-if" => "home.device == null"}
    %div{ :style => "padding: 20px" }
      %p
        Welcome to Multiroom Audio 1.0
      %p
        Please select a Chromecast audio device below

  #media-selector{ "ng-if" => "home.device != null"}
    #mode-select.ellipsis
      %p
        %a{ "ng-click" => "selectMode('presets')"}
          Presets
        %img{ "src" => "/images/sound_16.png", "ng-if" => "" }
      %p
        %a{ "ng-click" => "selectMode('playlists')"}
          Playlists
      %p
        %a{ "ng-click" => "selectMode('music')"}
          Music
      %p
        %a{ "ng-click" => "selectMode('radio')"}
          Radio
      %p
        %a{ "ng-click" => "selectMode('spoken')"}
          Spoken
      %p
        %a{ "ng-click" => "selectMode('white-noise')"}
          White Noise

    // Music, books
    #selector1{ "ng-if" => "home.mode == 'music'", style: "white-space: nowrap; text-overflow: ellipsis; overflow-x: hidden" }
      %h4
        Music By Folder:
      .folder-name{ "ng-repeat" => "folder in home.folders" }
        %a{ "ng-click" => "get_media_folder(folder)" }
          {{folder.basename}}
        %sup{ "ng-if" => "folder.id == home.state_shared.folder"}
          *

    // Radio
    #selector2{ "ng-if" => "home.mode == 'radio'" }
      .mp3-record{ "ng-repeat" => "station in home.radio_stations" }
        .mp3-title.ellipsis
          %a{ "ng-click" => "play_radio(station)"}
            {{station.name}}

    // Music / White Noise
    #selector2{ "ng-if" => "home.mode == 'music' || home.mode == 'white-noise'"}
      .mp3-record
        .mp3-title
          Title
          %a{ "ng-click" => "refresh_media()"}
            %img{ :src => "/images/refresh_16.png", :title => "Refresh the media in '{{home.mode}}'" }
        .mp3-artist.ellipsis
          Artist
        .mp3-album.ellipsis
          Album
        .mp3-year
          Year
        .mp3-length-seconds
          Time
      / works for 'white-noise' and 'music'
      .mp3-record{ "ng-repeat" => "mp3 in home.media" }
        .mp3-title.ellipsis
          %div{ "ng-if" => "playlist.current_index == $index", style: "margin-left: -20px; display: inline" }
            %img{ "src" => "/images/sound_16.png", "ng-if" => "!buffering" }
            %img{ "src" => "/images/sound_buffering_16.png", "ng-if" => "buffering" }

          %a{ "ng-click" => "play($index)"}
            {{mp3.title || mp3.filename}}
        .mp3-artist.ellipsis
          {{mp3.artist || 'N/A' }}
        .mp3-album.ellipsis
          {{mp3.album || 'N/A'}}
        .mp3-year
          {{mp3.year || 'N/A'}}
        .mp3-length-seconds
          {{mp3.length_seconds | secondsToDateTime | date:'H:mm:ss' }}


  #cast-select
    %table.table{ :style => "width: 100%" }
      %tr
        %td{ :style => "width: 50%" }
          %table{ :style => "width: 100%; table-layout: fixed" }
            %tr{ "ng-repeat" => "device in home.devices.groups" }
              %td.ellipsis{ :style => "width: 40%;" }
                %a.ellipsis{ "ng-click" => "select_cast(device)" }
                  {{device.friendly_name}}
                  %sup{ "ng-if" => "home.device == device" }
                    *
              %td.ellipsis{ :style => "width: 60%; float: right" }
                %input.slider{ type: "range", min: "0", max: "1", step: ".05", "ng-click" => "volume_change(device)", "ng-model" => "device.volume_level" }

        %td{ :style => "width: 50%" }
          %img{ :src => "/images/refresh_16.png", title: "Refresh the list of casts/groups", style: "position: absolute; right: 20px" }

          %table{ :style => "width: 100%; table-layout: fixed" }
            %tr{ "ng-repeat" => "device in home.devices.audios" }
              %td.ellipsis{ :style => "width: 40%;" }
                %a.ellipsis{ "ng-click" => "select_cast(device)" }
                  {{device.friendly_name}}
                  %sup{ "ng-if" => "home.device == device" }
                    *
              %td.ellipsis{ :style => "width: 60%; padding-right: 40px" }
                %input.slider{ type: "range", min: "0", max: "1", step: ".05", "ng-click" => "volume_change(device)", "ng-model" => "device.volume_level" }

  #playbar
    #playerControl.g-z-index-header.m-visible
      #playerControl__inner

        #jquery_jplayer_1.jp-jplayer

        #playerControl__wrapper.l-container.l-fullwidth
          %ul#playerControl__controls.sc-list-nostyle.g-dark.sc-clearfix

            %li{ style: "float: left; width: 50px;" }
              %img{ "ng-src" => "{{ playlist.current_item['img50'] }}" }
            %li#playerControl__playPauseSkip
              %button#player-prev.skipControl.playerControl__icon.sc-ir.skipControl__previous{ "ng-click" => "prev()", title: "Play previous", "ng-class" => "{ 'disabled': player.playlistIndex == 0 }" }
              %button#player.play.playControl.playerControl__icon.sc-ir{"ng-show" => "!player.playing", "ng-click" => "resume()", :title => "Play current", title: "Play current" }
              %button#player-pause.pauseControl.playerControl__icon.sc-ir{"ng-show" => "player.playing", "ng-click" => "pause()", "ng-cloak" => "", :title => "Pause current", title: "Pause current"}
              %button#player-next.skipControl.playerControl__icon.sc-ir.skipControl__next{ "ng-click" => "next()", title: "Skip to next", "ng-class" => "{ 'disabled': player.playlistIndex == player.playlist.length - 1 }" }

              %button#repeat-toggle.skipControl.playerControl__icon.sc-ir{ "ng-click" => "toggleRepeat()", title: "Enable/disable repeat", :class => "skipControl__repeat_{{home.state_local.repeat}}" }
              %button#repeat-toggle.skipControl.playerControl__icon.sc-ir{ "ng-click" => "toggleShuffle()", title: "Enable/disable shuffle", :class => "skipControl__shuffle_{{home.state_local.shuffle}}" }

            %li#playerControl__timeline.sc-clearfix
              #playbackChrono.sc-clearfix.is-scrubbable.has-sound
                #playbackChrono__timePassed
                  %span{"aria-hidden" => "true"} 0:00
                #playbackChrono__progressWrapper.hand{ "ng-click" => "player.seek($event)" }
                  #playbackChrono__progressBackground
                  #playbackChrono__progressBar{:style => "width: 0%;"}
                  #playbackChrono__progressHandle.sc-ir{:style => "left: 16px;"}
                #playbackChrono__duration
                  %span{"aria-hidden" => "true"}
