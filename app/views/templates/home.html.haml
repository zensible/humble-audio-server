#content{"ng-controller" => "HomeCtrl" }
  #jquery_jplayer_1.jp-jplayer

  %span#loading{ "ng-if" => "!loaded" }
    = render :partial => 'loading'

  #top{ "ng-if" => "loaded" }
    = render :partial => 'configure_group'

    #loading-small{ "ng-if" => "loading" }
      = render :partial => 'loading'

    #media-selector{ "ng-if" => "home.device"}
      #mode-select.ellipsis
        %p{ "ng-repeat" => "mode in available_modes"}
          = render :partial => 'mode'

      #selector2{ "ng-if" => "home.mode == 'settings'" }
        %h4
          Settings:
        %br

        %h5
          Addresses:

        {{http_address_local}}
        %br
        {{http_address_ddns}}

      // Presets
      #selector2{ "ng-if" => "home.mode == 'presets'" }
        %h4
          Presets:
        %p{ "ng-if" => "is_anything_playing()"}
          %a{ "ng-click" => "preset_create()" }<
            Create Preset
          &nbsp;based the currently playing casts + playlists
        %p{ "ng-if" => "!is_anything_playing()"}
          Start casting in order to save a preset

        .preset-record
          .preset-title.ellipsis
            Preset Name:
          .preset-schedule
            Schedule: days, start time, stop time
          .preset-delete

        .preset-record{ "ng-repeat" => "preset in home.presets" }
          .preset-title.ellipsis
            %a{ "ng-click" => "play_preset(preset.id)"}
              {{preset.name}}
            &nbsp;
            %a{ "ng-click" => "rename_preset(preset.id)", style: "font-size: 10px" }
              (rename)
          .preset-schedule
            %input.schedule_days{ "ng-model" => "preset.schedule_days", :placeholder => "Daily" }
            %input.schedule_start{ "ng-model" => "preset.schedule_start", :placeholder => "12:30 PM" }
            %input.schedule_end{ "ng-model" => "preset.schedule_end", :placeholder => "1:30 AM" }
            %a{ "ng-click" => "save_preset_schedule(preset)"}
              SAVE
          .preset-delete
            %a{ "ng-click" => "delete_preset(preset.id)"}
              DEL

        %br
        %h4
          Scheduling Help:
        %div{ style: "width: 500px" }
          You can schedule presets to start/stop at certain days and times.

        %p{ "ng-if" => "home.presets.length > 0" }
          Days format: M TU W TH F SA SU.
          %ul
            %li
              Example: "M W F" (minus the quotes) for Monday + Wednesday + Friday
            %li
              Example: "SA SU" for the weekend
            %li
              If blank will run daily
        %br
        %br

      // Music / White Noise
      #selector2{ "ng-if" => "home.mode == 'music' || home.mode == 'white-noise' || home.mode == 'spoken'"}
        %h3
          %span{ "ng-if" => "home.mode == 'music'"}
            Music:
          %span{ "ng-if" => "home.mode == 'spoken'"}
            Spoken:
          %span{ "ng-if" => "home.mode == 'white-noise'"}
            White Noise:
          %a#refresh-media.hand{ "ng-click" => "refresh_media()"}
            %img{ "ng-src" => "/images/{{theme.icons}}/refresh_16.png", :title => "Refresh the media in '{{home.mode}}'" }

        %h3{ "ng-if" => "(home.mode == 'music' || home.mode == 'spoken') && home.folder_id != -1" }
          {{home.folder.basename}}:

        %h3{ "ng-if" => "(home.mode == 'music' || home.mode == 'spoken') && home.folder_id == -1" }
          Home:

        /Sort by:
        /%input{ :type => "radio", :name => "sort_by", :value => "title" } Title
        /%input{ :type => "radio", :name => "sort_by", :value => "filename" } Filename

        .mp3-record{ "ng-if" => "home.mode == 'spoken' && home.folder.bookmark['mp3']"}
          %p
            %a{ "ng-click" => "play_bookmark(home.folder.bookmark)" }
              Resume From Bookmark: 
          %p
            &nbsp;&nbsp;"{{home.folder.bookmark['mp3']['title']}}" -> {{home.folder.bookmark['elapsed_friendly']}}

        .folder-record{ "ng-if" => "home.folder_id > -1 && mode != 'white-noise'" }
          .folder-name.back.ellipsis
            %a#back-button{ "ng-click" => "select_folder(home.folder.parent_folder_id)" }
              &lt;-- Back

        .folder-record{ "ng-repeat" => "folder in home.folders", "ng-if" => "folder.parent_folder_id == home.folder_id && home.mode != 'white-noise'" }
          .folder-playing
            %span.play-button{ "ng-if" => "is_playing('folder_id', folder.id)", "ng-init" => "entry = is_playing('folder_id', folder.id)" }
              %img{ "ng-src" => "/images/play_device_0.png"}

          .folder-name.ellipsis
            %a.select-folder{ "ng-click" => "select_folder(folder.id)" }
              {{folder.basename}}
            %span.play-button{ "ng-if" => "is_playing('folder_id', folder.id)" }

        .mp3-record{ "ng-if" => "!home.mp3s.length && !home.folders.length" }
          No tracks or folders found

        .mp3-record{ "ng-if" => "home.mp3s.length" }
          .mp3-playing
          .mp3-track-nr
            = "#"
          .mp3-title
            Title
          .mp3-artist.ellipsis
            Artist
          .mp3-album.ellipsis
            Album
          .mp3-year
            Year
          .mp3-length-seconds
            Time

        / works for 'white-noise' and 'music'
        .mp3-record{ "ng-repeat" => "mp3 in home.mp3s" }
          .mp3-playing
            %span.play-button{ "ng-if" => "is_playing('mp3_id', mp3.id)", "ng-init" => "entry = is_playing('mp3_id', mp3.id)" }
              %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
          .mp3-track-nr
            {{mp3.track_nr || "-"}}
          .mp3-title.ellipsis
            %a.play-mp3{ "ng-click" => "play($index)"}
              {{mp3.title || mp3.filename}}
          .mp3-artist.ellipsis
            {{mp3.artist || ' - ' }}
          .mp3-album.ellipsis
            {{mp3.album || ' - '}}
          .mp3-year
            {{mp3.year || ' - '}}
          .mp3-length-seconds
            {{mp3.length_seconds | secondsToDateTime | date:'H:mm:ss' }}

        %br
        %p{ "ng-if" => "home.mode == 'spoken'"}
          Note: In the Spoken Word section, stopping or pausing a track will save a "bookmark" which you can resume later.

        %br
        %br

      // Radio
      #selector2{ "ng-if" => "home.mode == 'radio'" }
        %h4
          Radio Stations:
        .mp3-record{ "ng-repeat" => "station in home.radio_stations", style: "width: 500px" }
          .mp3-playing
            %span.play-button{ "ng-if" => "is_playing('mp3_url', station.url)", "ng-init" => "entry = is_playing('mp3_url', station.url)" }
              %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
          .mp3-title.ellipsis
            %a{ "ng-click" => "play_radio(station)"}
              {{station.name}}
        %br

    #cast-select
      %script#mySnippet{:type => "text/ng-template"}

      %table{ :style => "width: 100%" }
        %tr
          %td{ :style => "width: 50%; vertical-align: top" }
            %table{ :style => "width: 100%; table-layout: fixed" }
              %tr{ "ng-repeat" => "device in home.devices", "ng-if" => "device.cast_type == 'group'" }
                = render :partial => 'device'
              %tr#browser-device{ "ng-init" => "device = browser_device"}
                = render :partial => 'device'

          %td{ :style => "width: 50%; vertical-align: top" }
            %img.hand{ "ng-click" => "refresh_devices()", "ng-src" => "/images/{{theme.icons}}/refresh_16.png", title: "Refresh the list of casts/groups", style: "position: absolute; right: 20px" }

            %table{ :style => "width: 100%; table-layout: fixed" }
              %tr{ "ng-repeat" => "device in home.devices", "ng-if" => "device.cast_type == 'audio'" }
                = render :partial => 'device'

    //{ "ng-if" => "home.device.player_status != 'IDLE' && home.device.player_status != 'UNKNOWN'" }
    #playbar
      #cur-song
        #song-name.ellipsis
          %span{  }
            {{home.device.state_local.mp3.title || home.device.state_local.mp3.filename || home.device.state_local.radio_station.name || "---"}}
          %span{ "ng-if" => "home.device.state_local.mp3.artist" }
            ({{home.device.state_local.mp3.artist}})
        #current-cast-name.ellipsis
          {{home.device.friendly_name}}
      #play-controls
        #playbar-previous.play-control.play-control-large.hand{ "ng-click" => "prev()", title: "Play previous", "ng-class" => "{ 'disabled': playbar.playlistIndex == 0 }" }
          %img{ "ng-src" => "/images/{{theme.icons}}/previous_16.png" }
        #playbar-resume.play-control.play-control-large.hand{"ng-show" => "!playbar.playing", "ng-click" => "resume()", title: "Play current" }
          %img{ "ng-src" => "/images/{{theme.icons}}/play2_20.png" }
        #playbar-pause.play-control.play-control-large.hand{"ng-show" => "playbar.playing", "ng-click" => "pause()", title: "Pause current"}
          %img{ "ng-src" => "/images/{{theme.icons}}/pause2_20.png" }
        #playbar-next.play-control.play-control-large.hand{ "ng-click" => "next()", title: "Skip to next", "ng-class" => "{ 'disabled': playbar.playlistIndex == playbar.playlist.length - 1 }" }
          %img{ "ng-src" => "/images/{{theme.icons}}/next_16.png" }
        #playbar-repeat.play-control.play-control-small.hand{ "ng-click" => "toggleRepeat()", title: "Enable/disable repeat" }
          %img{ "ng-src" => "/images/{{theme.icons}}/repeat_{{home.device.state_local.repeat}}_16.png" }
        #playbar-shuffle.play-control.play-control-small.hand{ "ng-click" => "toggleShuffle()", title: "Enable/disable shuffle" }
          %img{ "ng-src" => "/images/{{theme.icons}}/shuffle_{{home.device.state_local.shuffle}}_16.png" }

      #time-passed
        %span 0:00

      #progress
        #progress-wrapper.hand{ "ng-click" => "seek($event)" }
          #progress-background
          #progress-bar{:style => "width: 0%;"}
          #progress-handle.sc-ir{:style => "left: 16px;"}

      #playback-duration
        %span

      #stop-all
        %a.hand{ "ng-click" => "stop_all()", title: "Emergency stop all chromecasts" }<
          %img{ "ng-src" => "/images/{{theme.icons}}/stop_20.png" }

