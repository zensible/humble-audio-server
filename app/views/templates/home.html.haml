#top.flex-column{"ng-controller" => "HomeCtrl"}
  #media-selector.flex-height
    #mode-select
      %p
        %a{ "ng-click" => "selectMode('presets')"}
          Presets
      %p
        %a{ "ng-click" => "selectMode('radio')"}
          Radio
      %p
        %a{ "ng-click" => "selectMode('music')"}
          Music
      %p
        %a{ "ng-click" => "selectMode('spoken')"}
          Spoken
      %p
        %a{ "ng-click" => "selectMode('white-noise')"}
          White Noise

    #selector1.ellipsis
      %p
        playlist name 1
      %p
        playlist name 2
      %p
        playlist name 3
      %p
        playlist name 4
      %p
        playlist name 5
      %p
        playlist name 6
    #selector2
      .mp3-record
        .mp3-title
          Title
        .mp3-artist.ellipsis
          Artist
        .mp3-album.ellipsis
          Album
        .mp3-year
          Year
        .mp3-length-seconds
          Time
      .mp3-record{ "ng-repeat" => "mp3 in home.media" }
        .mp3-title.ellipsis
          %a{ "ng-click" => "play($index)"}
            {{mp3.title || mp3.filename}}
        .mp3-artist.ellipsis
          {{mp3.artist || 'N/A' }}
        .mp3-album.ellipsis
          {{mp3.album || 'N/A'}}
        .mp3-year
          {{mp3.year || 'N/A'}}
        .mp3-length-seconds
          {{mp3.length_seconds | secondsToDateTime | date:'H:mm:ss' }}
      %a{ "ng-click" => "refresh_media()"}
        refresh

  #cast-select.flex-height
    %table.table{ :style => "width: 100%" }
      %tr
        %td{ :style => "width: 50%" }
          %p{ "ng-repeat" => "device in home.devices.groups" }
            %a{ "ng-click" => "select_cast(device)" }
              {{device.friendly_name}}
        %td{ :style => "width: 50%" }
          %div{ "ng-repeat" => "device in home.devices.audios" }
            %a{ "ng-click" => "select_cast(device)" }
              {{device.friendly_name}}
            %input.slider{ type: "range", min: "0", max: "1", step: ".05", "ng-mouseup" => "volume_change(device)", "ng-model" => "device.volume_level" }

  #playbar
    #playerControl.g-z-index-header.m-visible
      #playerControl__inner

        #jquery_jplayer_1.jp-jplayer

        #playerControl__wrapper.l-container.l-fullwidth
          %ul#playerControl__controls.sc-list-nostyle.g-dark.sc-clearfix

            %li{ style: "float: left; width: 50px;" }
              %img{ "ng-src" => "{{ playlist.current_item['img50'] }}" }
            %li#playerControl__playPauseSkip
              %button#player-prev.skipControl.playerControl__icon.sc-ir.skipControl__previous{ "ng-click" => "player.prev()", title: "Play previous", "ng-class" => "{ 'disabled': !player.allowPlaylist || player.playlistIndex == 0 }" }
              %button#player.play.playControl.playerControl__icon.sc-ir{"ng-show" => "!player.playing", "ng-click" => "player.play()", :title => "Play current", title: "Play current", "ng-class" => "{ 'disabled': playlist.items.length == 0 }"}
              %button#player-pause.pauseControl.playerControl__icon.sc-ir{"ng-show" => "player.playing", "ng-click" => "player.pause()", "ng-cloak" => "", :title => "Pause current", title: "Pause current"}
              %button#player-next.skipControl.playerControl__icon.sc-ir.skipControl__next{ "ng-click" => "player.next()", title: "Skip to next", "ng-class" => "{ 'disabled': !player.allowPlaylist || player.playlistIndex == player.playlist.length - 1 }" }

            %li#playerControl__repeat
              %button.repeatControl.sc-ir{:title => "Repeat playing track"} Repeat track

            %li#playerControl__timeline.sc-clearfix
              #playbackChrono.sc-clearfix.is-scrubbable.has-sound
                #playbackChrono__timePassed
                  %span{"aria-hidden" => "true"} 0:00
                #playbackChrono__progressWrapper.hand{ "ng-click" => "player.seek($event)" }
                  #playbackChrono__progressBackground
                  #playbackChrono__progressBar{:style => "width: 0%;"}
                  #playbackChrono__progressHandle.sc-ir{:style => "left: 16px;"}
                #playbackChrono__duration
                  %span{"aria-hidden" => "true"}

            %li#playerControl__volume{ "ng-mouseenter" => "player.showVol()", "ng-mouseleave" => "player.hideVol()" }
              .volume{"data-level" => "4"}
                .volume__iconWrapper
                  %button.volume__button.volume__speakerIcon.sc-ir
                    Toggle mute
                .volume__sliderWrapper
                  .volume__sliderBackground
                  .volume__sliderProgress{:style => "height: 36.8px;"}
                  .volume__sliderHandle{:style => "top: 65.2px;"}  }
