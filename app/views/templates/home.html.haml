#top{"ng-controller" => "HomeCtrl"}
  #media-selector{ "ng-if" => "!home.device && home.devices_loaded"}
    %div{ :style => "padding: 20px" }
      %p
        Welcome to Multiroom Audio 1.0
      %p
        Please select a Chromecast audio device below

  #media-selector{ "ng-if" => "home.device"}
    #mode-select.ellipsis
      %p
        %a{ "ng-click" => "selectMode('presets')"}
          Presets
        %span.play-button{ "ng-if" => "is_playing('mode', 'presets')", "ng-init" => "entry = is_playing('mode', 'presets')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
      %p
        %a{ "ng-click" => "selectMode('playlists')"}
          Playlists
        %span.play-button{ "ng-if" => "is_playing('mode', 'playlists')", "ng-init" => "entry = is_playing('mode', 'playlists')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
      %p
        %a{ "ng-click" => "selectMode('music')"}
          Music
        %span.play-button{ "ng-if" => "is_playing('mode', 'music')", "ng-init" => "entry = is_playing('mode', 'music')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
      %p
        %a{ "ng-click" => "selectMode('radio')"}
          Radio
        %span.play-button{ "ng-if" => "is_playing('mode', 'radio')", "ng-init" => "entry = is_playing('mode', 'radio')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
      %p
        %a{ "ng-click" => "selectMode('spoken')"}
          Spoken
        %span.play-button{ "ng-if" => "is_playing('mode', 'spoken')", "ng-init" => "entry = is_playing('mode', 'spoken')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
      %p
        %a{ "ng-click" => "selectMode('white-noise')"}
          White Noise
        %span.play-button{ "ng-if" => "is_playing('mode', 'white-noise')", "ng-init" => "entry = is_playing('mode', 'white-noise')" }
          %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}

    // Music
    #selector1{ "ng-if" => "home.mode == 'music' || home.mode == 'spoken'" }
      %h4
        %span{ "ng-if" => "home.mode == 'music'"}
          Music By Folder:
        %span{ "ng-if" => "home.mode == 'spoken'"}
          Spoken Word:
        %a.hand{ "ng-click" => "refresh_media()"}
          %img{ :src => "/images/refresh_16.png", :title => "Refresh the media in '{{home.mode}}'" }

      .folder-record{ "ng-if" => "home.folder_id > -1" }
        .folder-playing

        .folder-name.ellipsis
          %a{ "ng-click" => "select_folder(cur_folder().parent_folder_id)" }
            ^-- Back
      .folder-record{ "ng-repeat" => "folder in home.folders", "ng-if" => "folder.parent_folder_id == home.folder_id" }
        .folder-playing
          %span.play-button{ "ng-if" => "is_playing('folder_id', folder.id)", "ng-init" => "entry = is_playing('folder_id', folder.id)" }
            %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}

        .folder-name.ellipsis
          %a{ "ng-click" => "select_folder(folder.id)" }
            {{folder.basename}}
          %span.play-button{ "ng-if" => "is_playing('folder_id', folder.id)" }

    // Presets
    #selector2{ "ng-if" => "home.mode == 'presets'" }
      %h4
        Presets:
      %p{ "ng-if" => "is_anything_playing()"}
        %a{ "ng-click" => "preset_create()" }
          Create Preset
      %p{ "ng-if" => "is_anything_playing()"}
        Start casting in order to save a preset

      .preset-record
        .preset-title.ellipsis
          Preset Name:
        .preset-schedule
          Schedule: days, start time, stop time
        .preset-delete

      .preset-record{ "ng-repeat" => "preset in home.presets" }
        .preset-title.ellipsis
          %a{ "ng-click" => "play_preset(preset.id)"}
            {{preset.name}}
        .preset-schedule
          %input.schedule_days{ "ng-model" => "preset.schedule_days", :placeholder => "Daily" }
          %input.schedule_start{ "type" => "time", "ng-model" => "preset.schedule_start" }
          %input.schedule_end{ "type" => "time", "ng-model" => "preset.schedule_end" }
        .preset-delete
          DEL

      %br
      %div{ style: "width: 500px" }
        Presets allow you to save the current play configuration (devices playing, their playlists, shuffle/repeat etc) and play them again later with a single click. You may also schedule them to run automatically at a given time on days of the week.

      %p{ "ng-if" => "home.presets.length > 0" }
        Schedule days: M TU W TH F SA SU. Daily if left blank.

    // Radio
    #selector2{ "ng-if" => "home.mode == 'radio'" }
      %h4
        Radio Stations:
      .mp3-record{ "ng-repeat" => "station in home.radio_stations", style: "width: 500px" }
        .mp3-playing
          %span.play-button{ "ng-if" => "is_playing('mp3_url', station.url)", "ng-init" => "entry = is_playing('mp3_url', station.url)" }
            %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
        .mp3-title.ellipsis
          %a{ "ng-click" => "play_radio(station)"}
            {{station.name}}

    // Music / White Noise
    #selector2{ "ng-if" => "home.mode == 'music' || home.mode == 'white-noise' || home.mode == 'spoken'"}
      %h3{ "ng-if" => "(home.mode == 'music' || home.mode == 'spoken') && home.folder_id != -1" }
        {{cur_folder().basename}}:
        %a.hand{ "ng-click" => "refresh_media()"}
          %img{ :src => "/images/refresh_16.png", :title => "Refresh the media in '{{home.mode}}'" }

      %h3{ "ng-if" => "home.mode == 'white-noise'" }
        White Noise:
        %a.hand{ "ng-click" => "refresh_media()"}
          %img{ :src => "/images/refresh_16.png", :title => "Refresh the media in '{{home.mode}}'" }

      .mp3-record{ "ng-if" => "!home.mp3s.length" }
        No tracks found
      .mp3-record{ "ng-if" => "home.mp3s.length" }
        .mp3-playing

        .mp3-title
          Title
        .mp3-artist.ellipsis
          Artist
        .mp3-album.ellipsis
          Album
        .mp3-year
          Year
        .mp3-length-seconds
          Time
      / works for 'white-noise' and 'music'
      .mp3-record{ "ng-repeat" => "mp3 in home.mp3s" }
        .mp3-playing
          %span.play-button{ "ng-if" => "is_playing('mp3_id', mp3.id)", "ng-init" => "entry = is_playing('mp3_id', mp3.id)" }
            %img{ "ng-src" => "/images/play_device_{{entry.num_casting}}.png"}
        .mp3-title.ellipsis
          %a{ "ng-click" => "play($index)"}
            {{mp3.title || mp3.filename}}
        .mp3-artist.ellipsis
          {{mp3.artist || ' - ' }}
        .mp3-album.ellipsis
          {{mp3.album || ' - '}}
        .mp3-year
          {{mp3.year || ' - '}}
        .mp3-length-seconds
          {{mp3.length_seconds | secondsToDateTime | date:'H:mm:ss' }}


  #cast-select
    %script#mySnippet{:type => "text/ng-template"}

    %table{ :style => "width: 100%" }
      %tr
        %td{ :style => "width: 50%; vertical-align: top" }
          %table{ :style => "width: 100%; table-layout: fixed" }
            %tr{ "ng-repeat" => "device in home.devices", "ng-if" => "device.cast_type == 'group'" }
              = render :partial => 'device'

        %td{ :style => "width: 50%; vertical-align: top" }
          %img.hand{ "ng-click" => "refresh_devices()", :src => "/images/refresh_16.png", title: "Refresh the list of casts/groups", style: "position: absolute; right: 20px" }

          %table{ :style => "width: 100%; table-layout: fixed" }
            %tr{ "ng-repeat" => "device in home.devices", "ng-if" => "device.cast_type == 'audio'" }
              = render :partial => 'device'

  #playbar
    #playerControl.g-z-index-header.m-visible{ "ng-if" => "home.device.player_status != 'IDLE' && home.device.player_status != 'UNKNOWN'" }
      #playerControl__inner

        #jquery_jplayer_1.jp-jplayer

        #playerControl__wrapper.l-container.l-fullwidth
          %ul#playerControl__controls.sc-list-nostyle.g-dark.sc-clearfix

            %li{ style: "float: left; width: 50px;" }
              %img{ "ng-src" => "{{ playlist.current_item['img50'] }}" }
            %li#playerControl__playPauseSkip
              %button#player-prev.skipControl.playerControl__icon.sc-ir.skipControl__previous{ "ng-click" => "prev()", title: "Play previous", "ng-class" => "{ 'disabled': player.playlistIndex == 0 }" }
              %button#player.play.playControl.playerControl__icon.sc-ir{"ng-show" => "!player.playing", "ng-click" => "resume()", :title => "Play current", title: "Play current" }
              %button#player-pause.pauseControl.playerControl__icon.sc-ir{"ng-show" => "player.playing", "ng-click" => "pause()", "ng-cloak" => "", :title => "Pause current", title: "Pause current"}
              %button#player-next.skipControl.playerControl__icon.sc-ir.skipControl__next{ "ng-click" => "next()", title: "Skip to next", "ng-class" => "{ 'disabled': player.playlistIndex == player.playlist.length - 1 }" }

              %button#repeat-toggle.skipControl.playerControl__icon.sc-ir{ "ng-click" => "toggleRepeat()", title: "Enable/disable repeat", :class => "skipControl__repeat_{{home.repeat}}" }
              %button#repeat-toggle.skipControl.playerControl__icon.sc-ir{ "ng-click" => "toggleShuffle()", title: "Enable/disable shuffle", :class => "skipControl__shuffle_{{home.shuffle}}" }

            %li#playerControl__timeline.sc-clearfix
              #playbackChrono.sc-clearfix.is-scrubbable.has-sound
                #playbackChrono__timePassed
                  %span{"aria-hidden" => "true"} 0:00
                #playbackChrono__progressWrapper.hand{ "ng-click" => "player.seek($event)" }
                  #playbackChrono__progressBackground
                  #playbackChrono__progressBar{:style => "width: 0%;"}
                  #playbackChrono__progressHandle.sc-ir{:style => "left: 16px;"}
                #playbackChrono__duration
                  %span{"aria-hidden" => "true"}
